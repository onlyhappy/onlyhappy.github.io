{"meta":{"title":"zc | IT分享","subtitle":"JavaScript,ES6,Vue.js,React.js,Node.js,HTML5,CSS3,Angular.js,JS,HTML,CSS,前端,Web","description":"HTML/HTML5 CSS/CSS3 JavaScript React.js Vue.js Angular.js Node.js ES6 JS","author":"ITHappy","url":"http://ithappy.cn"},"pages":[{"title":"categories","date":"2017-10-07T13:39:27.000Z","updated":"2017-10-07T13:39:27.776Z","comments":true,"path":"categories/index.html","permalink":"http://ithappy.cn/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-10-07T13:38:42.000Z","updated":"2017-10-07T13:38:42.742Z","comments":true,"path":"tags/index.html","permalink":"http://ithappy.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"1.浅谈Vue.js","slug":"1-浅谈Vue-js","date":"2017-10-06T16:07:28.000Z","updated":"2017-10-07T14:27:11.567Z","comments":true,"path":"2017/10/07/1-浅谈Vue-js/","link":"","permalink":"http://ithappy.cn/2017/10/07/1-浅谈Vue-js/","excerpt":"","text":"浅谈Vue.js (一) 前言 随着前端开发趋势，旧浏览器逐渐淘汰，移动端用户需求增加，以及前后端的分离，前端的交互越来越多，功能越来越复杂，架构从传统后台mvc到向REST API+ 前端MV*迁移，前端的技术栈包罗万象、涉及极广，现代化产品交互多，技术复杂，而一个良好的产品能给用户带来良好的体验，以及前端框架的流行，能够很好的满足PC端和移动端的开发需求。目前为止比较流行的MVVM框架有AngularJS、ReactJs、和VueJS，接下来我会用文章一步一步详解Vue，加深理解对作者的思想和对知识的认知的记录。 1.1 简介Vue.js的作者为：Evan You（尤雨溪），起初是一个个人项目，但随着Vue生态圈的蓬勃发展（vue-router，vue-resource）等丰富的第三方插件，Vue已经是轻量级的MVVM框架了。 Vue的核心思想是数据驱动+组件化开发，参考了React的部分设计，当然也有自己的独特的单文件组件化开发方式，另外一些绑定的语法，用法等都非常精炼，很容易上手，而且Vue第三方插件非常丰富，社区活跃，更有详细的中文文档，可以很好的上手、学习。而且Vue配合官方和第三方的库可以实现单文件的组件化开发SPA等流行前端开发。 Vue学习详情请参考官网： Vue.js 相信大家觉得Vue和Angular语法比较相识，他们都有双向数据绑定的特征，Angular的学习曲线是比较陡峭，可以说颠覆了前端的开发方式，它的设计目标就是针对大型的复杂应用。与之相比，Vue更加轻量级，像官网上介绍的那样， 简洁、轻量、快速、数据驱动、模块友好、组件化。下面简单介绍Vue的几个特征。 1.2 简洁的语法和双向数据绑定Vue代码编写风格更加简洁、通俗易懂。双向数据绑定使数据的变化自动映射到HTML上。1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Hello Vue！&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue/dist/vue.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!--Vue模板的绑定数据的方法，用双花括号绑定Vue中的数据对象的属性 --&gt; &#123;&#123; msg &#125;&#125; &lt;/div&gt; &lt;script&gt; var app = new Vue(&#123; // 创建Vue的核心对象 el: &apos;#app&apos;, // el属性：把当前Vue对象挂载到 div标签上，#app是id选择器 data: &#123; // data: 是Vue对象中绑定的数据 msg: &apos;Hello Vue!&apos; // msg 自定义的数据 &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 结果： Hello Vue！ 1.3 指令指令: 扩展html标签功能,属性 v-model=”msg” 一般表单元素(input) 双向数据绑定 v-on:click=”函数” 单击事件 v-show=”true/false” 显示/隐藏 v-bind:src=”url” 绑定动态属性 1.4 路由让开发更加方便，可以在当前页面切换不同的组件 1234567891011121314//配置路由 const routes=[ &#123;path:&apos;/home&apos;, component:Home&#125;, &#123;path:&apos;/user&apos;, component:User&#125; ]; //生成路由实例 const router=new VueRouter(&#123; routes &#125;); //最后挂到vue上 new Vue(&#123; router, el:&apos;#box&apos; &#125;); 1.5 组件组件可以扩展HTML元素，封装可重用的代码。1234567891011121314151617181920212223242526272829// html &lt;template id=&quot;aaa&quot;&gt; &lt;div&gt; &lt;h3&gt;我是组件&lt;/h3&gt; &lt;h3&gt;我也是组件&lt;/h3&gt; &lt;/div&gt; &lt;/template&gt; &lt;div id=&quot;box&quot;&gt; &lt;aaa&gt;&lt;/aaa&gt; &#123;&#123;msg&#125;&#125; &lt;/div&gt; // js &lt;script&gt; var Home=&#123; //这是2.0组件 template:&apos;#aaa&apos; &#125;; new Vue(&#123; el:&apos;#box&apos;, data:&#123; msg:&apos;hello vue2.0组件&apos; &#125;, components:&#123; &apos;aaa&apos;:Home &#125; &#125;); &lt;/script&gt; 12345结果如下：我是组件我也是组件hello vue2.0组件 1.6 总结面对技术的选型，技术的社区非常重要，接下来Vue对比Angular和React：Vue.js更加轻量，gzip后大小只有20k+,相比其他框架更加轻量，Vue.js更加适合做移动端项目。学过Angularjs的同学更能体会到Vue.js容易上手，学习曲线的平稳，它借鉴了Angularjs的指令和Reactjs的组件化，Vue的计算属性也非常好用。面对移动端的需求增加，Vue.js发展趋势越来越好，相信大家会喜欢上Vue.js！","categories":[],"tags":[{"name":"Vue.js","slug":"Vue-js","permalink":"http://ithappy.cn/tags/Vue-js/"}]}]}